//
//  XBOAuthWebViewController.m
//  xbariPhone
//
//  Created by Ivan Bella LÃ³pez on 2/21/13.
//  Copyright (c) 2013 Ivan Bella Lopez. All rights reserved.
//

#import "XBOAuthWebViewController.h"
#import <QuartzCore/QuartzCore.h>

#define _kXBButtonMargin    13.0

@interface XBOAuthWebViewController ()
@property (nonatomic, strong) UIWebView *webView;
@property (nonatomic, strong) UIView    *headerView;
@property (nonatomic, strong) UIImageView    *headerImageView;
@property (nonatomic, strong) UIButton  *cancelButton;
@property (nonatomic, strong) UIButton  *refreshButton;
@property (nonatomic, strong) UIActivityIndicatorView *spinner;
@end

@implementation XBOAuthWebViewController



- (void)viewDidLoad
{
    [super viewDidLoad];
    self.view.backgroundColor = [UIColor clearColor];
    
    [self _setUpHeaderView];
    self.webView = [[UIWebView alloc] initWithFrame:CGRectMake(0, self.headerView.frame.size.height, self.view.bounds.size.width, self.view.bounds.size.height - self.headerView.frame.size.height)];
    self.webView.delegate = self;
	self.navigationController.navigationBarHidden = NO;
    
	[self _init];

    
    [self.view addSubview:self.webView];
    [self _setUpSpinner];
}


- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}


- (void)_setUpHeaderView
{
    UIImage *headerImage = [UIImage imageNamed:@"header_webview.png"];
    self.headerView = [[UIView alloc] initWithFrame:(CGRect){{0, 0}, headerImage.size}];
    self.headerImageView = [[UIImageView alloc] initWithFrame:(CGRect){{0, 0}, headerImage.size}];
    self.headerImageView.image = headerImage;
    
    
    UIImage *cancelImage = [UIImage imageNamed:@"btton_webview.png"];
    self.cancelButton = [UIButton buttonWithType:UIButtonTypeCustom];
    [self.cancelButton setBackgroundImage:cancelImage forState:UIControlStateNormal];
    
    self.cancelButton.frame = (CGRect){{_kXBButtonMargin, _kXBButtonMargin}, cancelImage.size};
    [self.cancelButton setTitle:@"Cancel" forState:UIControlStateNormal];
    [self.cancelButton setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
    [self.cancelButton.titleLabel setFont:[UIFont fontWithName:XBBaufraMediumFont size:14.0]];
    [self.cancelButton addTarget:self action:@selector(_dismissView) forControlEvents:UIControlEventTouchUpInside];
    [self.headerView addSubview:self.cancelButton];
    
    
    UIImage *refreshImage = [UIImage imageNamed:@"webview_refresh.png"];
    self.refreshButton = [UIButton buttonWithType:UIButtonTypeCustom];
    [self.refreshButton setBackgroundImage:refreshImage forState:UIControlStateNormal];
    
    self.refreshButton.frame = (CGRect){{self.headerView.frame.size.width - refreshImage.size.width - _kXBButtonMargin, 0.0}, refreshImage.size};
    [self.refreshButton xbCenterVerticallyInView:self.headerView];
    [self.refreshButton addTarget:self action:@selector(_reloadPage) forControlEvents:UIControlEventTouchUpInside];
    [self.headerView addSubview:self.refreshButton];
    
    [self.view addSubview:self.headerView];
}


- (void)_setUpSpinner
{
    self.spinner = [[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleWhiteLarge];
    self.spinner.frame = CGRectMake(0, 0, 70.0, 70.0);
    self.spinner.layer.backgroundColor = UIColorFromRGB(XBOrangeTextColor).CGColor;
    self.spinner.layer.cornerRadius = 5.0;
    [self.spinner xbCenterInView:self.view];
    [self.view addSubview:self.spinner];
}

#pragma mark - Actions

- (void)_dismissView
{
    [self dismissModalViewControllerAnimated:YES];
}


- (void)_reloadPage
{
    if (![self.spinner isAnimating]) {
        [self.spinner startAnimating];
    }
    
    [self.webView stopLoading];
    [self.webView reload];
}


- (void)_init
{
    NSString *authenticateURLString = [NSString stringWithFormat:@"http://www.eyeem.com/oauth/authorize?response_type=code&client_id=Jh130fmdwfg07OftEf0j0BdKdxrQ12hy&redirect_uri=http://www.3lokoj.com"];
    NSURLRequest *request = [NSURLRequest requestWithURL:[NSURL URLWithString:authenticateURLString]];
    [self.webView loadRequest:request];
}


#pragma mark - Web view delegate

- (BOOL)webView:(UIWebView *)webView shouldStartLoadWithRequest:(NSURLRequest *)request navigationType:(UIWebViewNavigationType)navigationType {
    
    [self.spinner startAnimating];
    
    return YES;
}


- (void)webViewDidFinishLoad:(UIWebView *)webView {
    [self.spinner stopAnimating];
    if (self.serviceName == XBServiceFoursquare) {
        
        
        NSString *URLString = [[self.webView.request URL] absoluteString];
        NSLog(@"--> %@", URLString);
        if ([URLString rangeOfString:@"access_token="].location != NSNotFound) {
            NSString *accessToken = [[URLString componentsSeparatedByString:@"="] lastObject];
            NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];
            [defaults setObject:accessToken forKey:kAccessToken_Foursquare];
            [defaults synchronize];
            [self dismissModalViewControllerAnimated:YES];
        }
    }
}


#warning text
- (void)webView:(UIWebView *)webView didFailLoadWithError:(NSError *)error
{
    [self.spinner stopAnimating];
    UIAlertView *aV = [[UIAlertView alloc] initWithTitle:@"Error" message:[error localizedDescription] delegate:self cancelButtonTitle:@"Ok" otherButtonTitles: nil];
    [aV show];
}

@end
